//Layout of the project

//Container of the devices
$container-xl: 1440px;
$container-l: 1280px;
$container-m: 960px;
$container-s: 768px;
$container-xs: 540px;
$gutter: 32px;

@mixin responsive($device) {
    @if $device == xl {
        //For resolutions above 1440px
        @media screen and (min-width: $container-xl) {
            @content;
        }
    } @else if $device == l {
        //For resolutions between 1216px and 1400px
        @media screen and (max-width: $container-xl) and (min-width: $container-l) {
            @content;
        }
    } @else if $device == m {
        //For resolutions between 960px and 1216px
        @media screen and (max-width: $container-l) and (min-width: $container-m) {
            @content;
        }
    } @else if $device == s {
        //For resolutions below 960px
        @media screen and (max-width: $container-m) {
            @content;
        }
    } @else if $device == xs {
        //For resolutions below 768px
        @media screen and (max-width: $container-s) {
            @content;
        }
    } @else if $device == xxs {
        //For resolutions below 540px
        @media screen and (max-width: $container-xs) {
            @content;
        }
    }
}

@function grid($col, $total: 12) {
    @return ($col/$total) * 100%;
}

@for $i from 1 through 12 {
    .grid-#{$i} {
        width: calc(#{grid($i)} - #{$gutter});
        margin: $gutter/2;
        padding: 16px 0;
        float: left;

        @include responsive(s) {
            width: calc(100% - #{$gutter});
            float: none;
        }
    }
}

@for $i from 1 to 13 {
    .grid-nobreak#{$i} {
        width: calc(#{grid($i)} - #{$gutter});
        margin: $gutter/2;
        padding: 16px 0;
        float: left;
    }
}

.container {
    max-width: $container-l;
    margin: 0 auto;
    padding: 96px 24px;
    position: relative;
    overflow: hidden;

    //clear fix
    &::after {
        content: "";
        display: table;
        clear: both;
    }

    @include responsive(s) {
        flex-direction: column;
        padding: 64px 48px;
    }
}

.visible {
    overflow: visible;
}

.disappear {
    @include responsive(m) {
        display: block;
    }
    @include responsive(s) {
        display: none;
    }
}

.disappear-mobile {
    @include responsive(xxs) {
        display: none;
    }
}

.text-nobreak {
    white-space: nowrap;
}

.row {
    // clearfix
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

.h-100 {
    height: 100vh;
}

.h-100p {
    height: 100%;
}

.relative {
    position: relative;
}

//Display flex
.flex {
    display: flex;
}
.flex-start-top {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-direction: row;
}
.flex-start {
    display: flex;
    justify-content: flex-start;
    align-items: center;
}
.flex-end {
    display: flex;
    justify-content: flex-end;
    align-items: center;
}

.flex-start-column {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-direction: column;
}
.flex-end-column {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    flex-direction: column;
}

.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-center-column {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.flex-space {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
}
.flex-space-column {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
}
.flex-around {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: column;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-item-1 {
    flex: 1 1 360px;
}

.flex-item-2 {
    flex: 2 1 360px;
}

.flex-item-3 {
    flex: 3 1 360px;
}

.flex-item-4 {
    flex: 4 1 360px;
}

.flex-item-5 {
    flex: 5 1 360px;
}

.flex-auto {
    flex: 1 1 auto;
}

// Widths and heights
.w-auto {
    width: auto;
}
.h-auto {
    height: auto !important;
}
.h-100 {
    height: 100%;
}
.h-80 {
    height: 80%;
}
.h-50 {
    height: 50%;
}
.w-100 {
    width: 100%;
}
.w-75 {
    width: 75%;
}
.w-50 {
    width: 50%;
}
.w-25 {
    width: 25%;
}

// Borders
.bb-black {
    border-bottom: 1px solid $black-light;
}

.bt-black {
    border-top: 1px solid $black-light;
}

.bl-black {
    border-left: 1px solid $black-light;
}

.br-black {
    border-right: 1px solid $black-light;
}

.bg-gray {
    background-color: $black-normal;
}

.bb-gray {
    border-bottom: 2px solid $black-normal;
}

.bt-gray {
    border-top: 2px solid $black-normal;
}

.bl-gray {
    border-left: 2px solid $black-normal;
}

.br-gray {
    border-right: 2px solid $black-normal;
}

